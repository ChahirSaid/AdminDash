{
    "openapi": "3.0.3",
    "info": {
      "title": "API Endpoints",
      "description": "APIDOCS FOR ADMINDASH",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:5000",
        "description": "Local server"
      }
    ],
    "paths": {
      "/api/customer": {
        "post": {
          "summary": "Create a customer",
          "description": "Creates a new customer.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": { "type": "string" },
                    "email": { "type": "string" },
                    "age": { "type": "integer" },
                    "city": { "type": "string" },
                    "phone": { "type": "string" }
                  }
                }
              }
            }
          },
          "responses": {
            "201": { "description": "Customer created successfully." },
            "500": { "description": "Internal server error." }
          }
        },
        "get": {
          "summary": "Get all customers",
          "description": "Retrieves all customers.",
          "responses": {
            "200": { "description": "List of customers." },
            "500": { "description": "Internal server error." }
          }
        },
        "/api/customer/{customer_id}": {
          "get": {
            "summary": "Get a customer by ID",
            "description": "Retrieves a customer by their ID.",
            "parameters": [
              {
                "in": "path",
                "name": "customer_id",
                "required": true,
                "description": "The ID of the customer to retrieve.",
                "schema": { "type": "integer" }
              }
            ],
            "responses": {
              "200": { "description": "Customer details." },
              "404": { "description": "Customer not found." },
              "500": { "description": "Internal server error." }
            }
          },
          "put": {
            "summary": "Update a customer by ID",
            "description": "Updates a customer by their ID.",
            "parameters": [
              {
                "in": "path",
                "name": "customer_id",
                "required": true,
                "description": "The ID of the customer to update.",
                "schema": { "type": "integer" }
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string" },
                      "email": { "type": "string" },
                      "age": { "type": "integer" },
                      "city": { "type": "string" },
                      "phone": { "type": "string" }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": { "description": "Customer updated successfully." },
              "404": { "description": "Customer not found." },
              "500": { "description": "Internal server error." }
            }
          },
          "delete": {
            "summary": "Delete a customer by ID",
            "description": "Deletes a customer by their ID.",
            "parameters": [
              {
                "in": "path",
                "name": "customer_id",
                "required": true,
                "description": "The ID of the customer to delete.",
                "schema": { "type": "integer" }
              }
            ],
            "responses": {
              "200": { "description": "Customer deleted successfully." },
              "404": { "description": "Customer not found." },
              "500": { "description": "Internal server error." }
            }
          }
        }
      },
      "/api/orders": {
        "post": {
          "summary": "Create an order",
          "description": "Creates a new order.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product_name": { "type": "string" },
                    "customer_name": { "type": "string" },
                    "status": { "type": "string" },
                    "date": { "type": "string", "format": "date-time" }
                  }
                }
              }
            }
          },
          "responses": {
            "201": { "description": "Order created successfully." },
            "400": { "description": "Missing required fields or invalid date format." },
            "404": { "description": "Product or customer not found." },
            "500": { "description": "Internal server error." }
          }
        },
        "get": {
          "summary": "Get all orders",
          "description": "Retrieves all orders.",
          "responses": {
            "200": { "description": "List of orders." },
            "500": { "description": "Internal server error." }
          }
        },
        "/api/orders/{order_id}": {
          "get": {
            "summary": "Get an order by ID",
            "description": "Retrieves an order by its ID.",
            "parameters": [
              {
                "in": "path",
                "name": "order_id",
                "required": true,
                "description": "The ID of the order to retrieve.",
                "schema": { "type": "integer" }
              }
            ],
            "responses": {
              "200": { "description": "Order details." },
              "404": { "description": "Order not found." },
              "500": { "description": "Internal server error." }
            }
          },
          "put": {
            "summary": "Update an order by ID",
            "description": "Updates an order by its ID.",
            "parameters": [
              {
                "in": "path",
                "name": "order_id",
                "required": true,
                "description": "The ID of the order to update.",
                "schema": { "type": "integer" }
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "product_name": { "type": "string" },
                      "customer_name": { "type": "string" },
                      "status": { "type": "string" },
                      "date": { "type": "string", "format": "date-time" }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": { "description": "Order updated successfully." },
              "404": { "description": "Order not found." },
              "500": { "description": "Internal server error." }
            }
          },
          "delete": {
            "summary": "Delete an order by ID",
            "description": "Deletes an order by its ID.",
            "parameters": [
              {
                "in": "path",
                "name": "order_id",
                "required": true,
                "description": "The ID of the order to delete.",
                "schema": { "type": "integer" }
              }
            ],
            "responses": {
              "200": { "description": "Order deleted successfully." },
              "404": { "description": "Order not found." },
              "500": { "description": "Internal server error." }
            }
          }
        }
      },
      "/api/products": {
        "get": {
          "summary": "Get all products",
          "description": "Returns a list of all products.",
          "responses": {
            "200": { "description": "A list of products." },
            "default": { "description": "Error occurred." }
          }
        },
        "/products/{id}": {
          "get": {
            "summary": "Get a product by ID",
            "description": "Returns a single product by its ID.",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "The ID of the product to retrieve.",
                "schema": { "type": "integer" }
              }
            ],
            "responses": {
              "200": { "description": "Product details." },
              "404": { "description": "Product not found." },
              "default": { "description": "Error occurred." }
            }
          },
          "delete": {
            "summary": "Delete a product by ID",
            "description": "Deletes a product by its ID.",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "The ID of the product to delete.",
                "schema": { "type": "integer" }
              }
            ],
            "responses": {
              "200": { "description": "Product deleted successfully." },
              "404": { "description": "Product not found." },
              "default": { "description": "Error occurred." }
            }
          },
          "put": {
            "summary": "Update a product by ID",
            "description": "Updates a product's details by its ID.",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "The ID of the product to update.",
                "schema": { "type": "integer" }
              },
              {
                "name": "body",
                "in": "body",
                "required": true,
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": { "type": "string" },
                    "brand": { "type": "string" },
                    "price": { "type": "number" },
                    "status": { "type": "string" }
                  }
                }
              }
            ],
            "responses": {
              "200": { "description": "Product updated successfully." },
              "404": { "description": "Product not found." },
              "default": { "description": "Error occurred." }
            }
          }
        }
      },
      "/api/it cteam": {
        "get": {
          "summary": "Get all team members",
          "description": "Returns a list of all team members.",
          "responses": {
            "200": { "description": "A list of team members." },
            "default": { "description": "Error occurred." }
          }
        },
        "/team/{id}": {
          "get": {
            "summary": "Get a team member by ID",
            "description": "Returns a single team member by their ID.",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "The ID of the team member to retrieve.",
                "schema": { "type": "integer" }
              }
            ],
            "responses": {
              "200": { "description": "Team member details." },
              "404": { "description": "Team member not found." },
              "default": { "description": "Error occurred." }
            }
          },
          "delete": {
            "summary": "Delete a team member by ID",
            "description": "Deletes a team member by their ID.",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "The ID of the team member to delete.",
                "schema": { "type": "integer" }
              }
            ],
            "responses": {
              "200": { "description": "Team member deleted successfully." },
              "404": { "description": "Team member not found." },
              "default": { "description": "Error occurred." }
            }
          },
          "put": {
            "summary": "Update a team member by ID",
            "description": "Updates a team member's details by their ID.",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "description": "The ID of the team member to update.",
                "schema": { "type": "integer" }
              },
              {
                "name": "body",
                "in": "body",
                "required": true,
                "schema": {
                  "type": "object",
                  "properties": {
                    "employeeName": { "type": "string" },
                    "employeeAge": { "type": "integer" },
                    "employeeCity": { "type": "string" },
                    "employeeEmail": { "type": "string" },
                    "employeePhone": { "type": "string" },
                    "employeePost": { "type": "string" }
                  }
                }
              }
            ],
            "responses": {
              "200": { "description": "Team member updated successfully." },
              "404": { "description": "Team member not found." },
              "default": { "description": "Error occurred." }
            }
          }
        }
      }
    }
  }
  